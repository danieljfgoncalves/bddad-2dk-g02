-- ### Eliminar tabelas ###

DROP TABLE BONUS;
DROP TABLE RESERVA;
DROP TABLE PASSAGEIRO;
DROP TABLE TRIPULANTE_TECNICO;
DROP TABLE TRIPULANTE_CABINE;
DROP TABLE VIAGEM_REALIZADA;
DROP TABLE PRECO;
DROP TABLE VIAGEM_PLANEADA;
DROP TABLE VOO_REGULAR;
DROP TABLE PLANO;
DROP TABLE VOO_ROTA;
DROP TABLE VOO;
DROP TABLE CATEGORIA_VOO;
DROP TABLE ROTA;
DROP TABLE AEROPORTO;
DROP TABLE CIDADE;
DROP TABLE PAIS;
DROP TABLE LONGITUDE;
DROP TABLE LATITUDE;
DROP TABLE HORAS_VOO;
DROP TABLE TRIPULANTE;
DROP TABLE CATEGORIA_TRIP;
DROP TABLE LUGAR;
DROP TABLE CLASSE_TIPO_AVIAO;
DROP TABLE CLASSE;
DROP TABLE AVIAO;
DROP TABLE TIPO_AVIAO;
DROP TABLE MARCA_MODELO;
DROP TABLE MARCA;


-- ### Criar tabelas ###

CREATE TABLE MARCA (
	MARCA_ID INTEGER PRIMARY KEY,
	NOME VARCHAR(50) NOT NULL
);

CREATE TABLE MARCA_MODELO (
	MARCA_MODELO_ID INTEGER PRIMARY KEY,
	MARCA_ID INTEGER NOT NULL REFERENCES MARCA(MARCA_ID),
	NOME VARCHAR(50) NOT NULL
);

CREATE TABLE TIPO_AVIAO (
	MARCA_MODELO INTEGER PRIMARY KEY REFERENCES MARCA_MODELO(MARCA_MODELO_ID),
	VELOCIDADE_MAX INTEGER NOT NULL,
	CAPACIDADE_DEPOSITO INTEGER NOT NULL,
	CARGA_MAX INTEGER NOT NULL,
	HORAS_VOO_MIN INTEGER NOT NULL,
	TOTAL_LUGARES INTEGER NOT NULL
);

CREATE TABLE AVIAO (
	NUM_SERIE VARCHAR(3) PRIMARY KEY,
	MARCA_MODELO INTEGER NOT NULL REFERENCES MARCA_MODELO(MARCA_MODELO_ID)
);

CREATE TABLE CLASSE (
	CLASSE_ID INTEGER PRIMARY KEY,
	NOME VARCHAR(50) NOT NULL
);

CREATE TABLE CLASSE_TIPO_AVIAO (
	MARCA_MODELO INTEGER REFERENCES TIPO_AVIAO(MARCA_MODELO),
	CLASSE INTEGER REFERENCES CLASSE(CLASSE_ID),
	CONSTRAINT PK_CLASSE_TIPO_AVIAO PRIMARY KEY (MARCA_MODELO, CLASSE)
);

CREATE TABLE LUGAR (
	NUM_FILA INTEGER,
	LETRA CHAR(1),
	MARCA_MODELO INTEGER,
	CLASSE INTEGER,
  CONSTRAINT FK_LUGAR FOREIGN KEY (MARCA_MODELO, CLASSE) REFERENCES CLASSE_TIPO_AVIAO(MARCA_MODELO, CLASSE),
	CONSTRAINT PK_LUGAR PRIMARY KEY (NUM_FILA, LETRA, MARCA_MODELO, CLASSE)
);

CREATE TABLE CATEGORIA_TRIP (
	CATEGORIA_TRIP_ID INTEGER PRIMARY KEY,
	NOME VARCHAR(50) NOT NULL,
	SALARIO_MENSAL FLOAT(10) NOT NULL
);

CREATE TABLE TRIPULANTE (
	TRIPULANTE_ID INTEGER PRIMARY KEY,
  NOME VARCHAR(50) NOT NULL,
	CATEGORIA INTEGER NOT NULL REFERENCES CATEGORIA_TRIP(CATEGORIA_TRIP_ID)
);


CREATE TABLE HORAS_VOO (
	PILOTO_ID INTEGER REFERENCES TRIPULANTE(TRIPULANTE_ID),
	MARCA_MODELO INTEGER,
	HORAS_VOO INTEGER NOT NULL,
	CONSTRAINT PK_HORAS_VOO PRIMARY KEY (PILOTO_ID, MARCA_MODELO),
  CONSTRAINT FK_HORAS_VOO FOREIGN KEY (MARCA_MODELO) REFERENCES TIPO_AVIAO(MARCA_MODELO)
);

CREATE TABLE LATITUDE (
	LATITUDE_ID INTEGER PRIMARY KEY,
	GRAUS NUMBER(3, 0) NOT NULL,
	MINUTOS NUMBER(2, 0) NOT NULL,
	SEGUNDOS NUMBER(2, 0) NOT NULL,
	ORIENTACAO CHAR(1) NOT NULL
);

CREATE TABLE LONGITUDE (
	LONGITUDE_ID INTEGER PRIMARY KEY,
	GRAUS NUMBER(3, 0) NOT NULL,
	MINUTOS NUMBER(2, 0) NOT NULL,
	SEGUNDOS NUMBER(2, 0) NOT NULL,
	ORIENTACAO CHAR(1) NOT NULL
);

CREATE TABLE PAIS (
	PAIS_ID NUMBER(3, 0) PRIMARY KEY,
	NOME VARCHAR(50) NOT NULL
);

CREATE TABLE CIDADE (
	CIDADE_ID INTEGER PRIMARY KEY,
	PAIS_ID NUMBER(3, 0) NOT NULL REFERENCES PAIS(PAIS_ID),
	NOME VARCHAR(50) NOT NULL
);

CREATE TABLE AEROPORTO (
	IATA_ID CHAR(3) PRIMARY KEY,
	NOME VARCHAR(50) NOT NULL,
	CIDADE_ID INTEGER NOT NULL REFERENCES CIDADE(CIDADE_ID),
	LONGITUDE_ID INTEGER NOT NULL REFERENCES LONGITUDE(LONGITUDE_ID),
	LATITUDE_ID INTEGER NOT NULL REFERENCES LATITUDE(LATITUDE_ID)
);

CREATE TABLE ROTA (
	ROTA_ID INTEGER PRIMARY KEY,
	DESCRICAO VARCHAR(50) NOT NULL
);

CREATE TABLE CATEGORIA_VOO (
	CAT_VOO_ID INTEGER PRIMARY KEY,
	NOME VARCHAR(50) NOT NULL,
  NUM_TRIP_CABINE INTEGER NOT NULL
);

CREATE TABLE VOO (
	VOO_ID INTEGER PRIMARY KEY,
	DISTANCIA INTEGER NOT NULL,
	DURACAO_MINUTOS INTEGER NOT NULL,
	AEROPORTO_ORIGEM CHAR(3) NOT NULL REFERENCES AEROPORTO(IATA_ID),
	AEROPORTO_DESTINO CHAR(3) NOT NULL REFERENCES AEROPORTO(IATA_ID),
	CAT_VOO_ID INTEGER NOT NULL REFERENCES CATEGORIA_VOO(CAT_VOO_ID)
);

CREATE TABLE VOO_ROTA(
	ROTA_ID INTEGER REFERENCES ROTA(ROTA_ID),
	VOO_ID INTEGER REFERENCES VOO(VOO_ID),
	CONSTRAINT PK_VOO_ROTA PRIMARY KEY (ROTA_ID, VOO_ID)
);

CREATE TABLE PLANO(
	PLANO_ID INTEGER PRIMARY KEY,
	DESCRICAO VARCHAR(50) NOT NULL,
	DATA_INICIO DATE NOT NULL,
	DATA_FIM DATE NOT NULL
);

CREATE TABLE VOO_REGULAR(
	VOO_REGULAR_ID INTEGER PRIMARY KEY,
	PLANO_ID INTEGER NOT NULL REFERENCES PLANO(PLANO_ID),
	VOO_ID INTEGER NOT NULL REFERENCES VOO(VOO_ID),
	AVIAO VARCHAR(3) REFERENCES AVIAO(NUM_SERIE),
	DIA_DA_SEMANA NUMERIC(1, 0) NOT NULL,
	HORARIO_PARTIDA CHAR(5) NOT NULL
);

CREATE TABLE VIAGEM_PLANEADA (
	VIAGEM_PLANEADA_ID INTEGER PRIMARY KEY,
	VOO_REGULAR INTEGER NOT NULL REFERENCES VOO_REGULAR(VOO_REGULAR_ID),
	DATA_PLANEADA_PARTIDA DATE NOT NULL,
	DATA_PLANEADA_CHEGADA DATE NOT NULL
);

CREATE TABLE PRECO(
	VOO_REGULAR_ID INTEGER REFERENCES VOO_REGULAR(VOO_REGULAR_ID),
	CLASSE_ID INTEGER REFERENCES CLASSE(CLASSE_ID),
	PRECO FLOAT(10) NOT NULL,
	CONSTRAINT PK_PRECO PRIMARY KEY (VOO_REGULAR_ID, CLASSE_ID)
);

CREATE TABLE VIAGEM_REALIZADA (
	VIAGEM_REALIZADA_ID INTEGER PRIMARY KEY REFERENCES VIAGEM_PLANEADA(VIAGEM_PLANEADA_ID),
	DATA_REALIZADA_PARTIDA DATE NOT NULL,
	DATA_REALIZADA_CHEGADA DATE NOT NULL
);

CREATE TABLE TRIPULANTE_CABINE (
	VIAGEM_PLANEADA INTEGER REFERENCES VIAGEM_PLANEADA(VIAGEM_PLANEADA_ID),
	TRIPULANTE INTEGER REFERENCES TRIPULANTE(TRIPULANTE_ID),
	FUNCAO VARCHAR(50) NOT NULL,
	CONSTRAINT PK_TRIP_CABINE PRIMARY KEY (VIAGEM_PLANEADA, TRIPULANTE)
);

CREATE TABLE TRIPULANTE_TECNICO (
	VIAGEM_PLANEADA INTEGER REFERENCES VIAGEM_PLANEADA(VIAGEM_PLANEADA_ID),
	TRIPULANTE INTEGER REFERENCES TRIPULANTE(TRIPULANTE_ID),
	FUNCAO VARCHAR(50) NOT NULL,
	CONSTRAINT PK_TRIP_TECNICO PRIMARY KEY (VIAGEM_PLANEADA, TRIPULANTE)
);

CREATE TABLE PASSAGEIRO (
	PASSAGEIRO_ID INTEGER PRIMARY KEY,
	PRIMEIRO_NOME VARCHAR(50) NOT NULL,
	ULTIMO_NOME VARCHAR(50) NOT NULL,
	TIPO_DOCUMENTO VARCHAR(50) NOT NULL,
	NUM_DOCUMENTO INTEGER NOT NULL
);

CREATE TABLE RESERVA (
	RESERVA_ID INTEGER PRIMARY KEY,
	PASSAGEIRO INTEGER NOT NULL REFERENCES PASSAGEIRO(PASSAGEIRO_ID),
	VIAGEM_PLANEADA INTEGER NOT NULL,
	CLASSE INTEGER, -- TEM DE EXISTIR NO TIPO DE AVIAO DO VOO
	NUM_FILA_LUGAR INTEGER, -- TEM DE EXISTIR NO TIPO DE AVIAO DO VOO
	LETRA_LUGAR CHAR(1), -- TEM DE EXISTIR NO TIPO DE AVIAO DO VOO
  CONSTRAINT FK_VIAGEM_PLAN FOREIGN KEY (VIAGEM_PLANEADA) REFERENCES VIAGEM_PLANEADA(VIAGEM_PLANEADA_ID)
);

CREATE TABLE BONUS(
	CAT_VOO_ID INTEGER REFERENCES CATEGORIA_VOO(CAT_VOO_ID),
	CATEGORIA_TRIP_ID INTEGER REFERENCES CATEGORIA_TRIP(CATEGORIA_TRIP_ID),
	BONUS FLOAT(10) NOT NULL,
	CONSTRAINT PK_BONUS PRIMARY KEY (CAT_VOO_ID, CATEGORIA_TRIP_ID)
);


-- ### Inserir restrições de integridade ###

-- R1:	Não garante que um tipo de avião tenha 1 ou 2 classes.
ALTER TABLE CLASSE ADD CONSTRAINT CK_R1_QUANTIDADE_CLASSES
CHECK (CLASSE_ID BETWEEN 1 AND 2);

-- R2: O número de lugares num tipo de avião não pode ser superior ao seu total de lugares.
CREATE OR REPLACE TRIGGER TG_R2_NUMERO_LUGARES
BEFORE INSERT OR UPDATE ON LUGAR
FOR EACH ROW
DECLARE
  TOTAL_LUGARES_EXISTENTES NUMBER;
  TOTAL_LUGARES_POSSIVEIS NUMBER;
BEGIN
  SELECT COUNT(*) INTO TOTAL_LUGARES_EXISTENTES FROM LUGAR
  WHERE MARCA_MODELO = :NEW.MARCA_MODELO;
  
  SELECT TOTAL_LUGARES INTO TOTAL_LUGARES_POSSIVEIS FROM TIPO_AVIAO
  WHERE MARCA_MODELO = :NEW.MARCA_MODELO;
  
  IF TOTAL_LUGARES_EXISTENTES >= TOTAL_LUGARES_POSSIVEIS THEN
    RAISE_APPLICATION_ERROR( -20101, 'Já foram inseridos todos os lugares.');
  END IF;
END;
/

-- R3:	A fila, letra do lugar e classe na reserva, têm de pertencer a um lugar do tipo de avião em questão.
CREATE OR REPLACE TRIGGER TG_R3_VALIDAR_LUGAR_RESERVA
BEFORE INSERT OR UPDATE ON RESERVA
FOR EACH ROW
DECLARE
  MARCA_MODELO_DA_RESERVA NUMBER;
  LUGAR_EXISTE NUMBER;
BEGIN
  IF (:NEW.CLASSE IS NULL AND :NEW.NUM_FILA_LUGAR IS NULL AND :NEW.LETRA_LUGAR IS NULL) THEN
    RETURN;
  END IF;
  
  -- Obter marca modelo da reserva
  SELECT A.MARCA_MODELO INTO MARCA_MODELO_DA_RESERVA
  FROM VIAGEM_PLANEADA VP, VOO_REGULAR VR, AVIAO A
  WHERE :NEW.VIAGEM_PLANEADA = VP.VIAGEM_PLANEADA_ID
  AND VP.VOO_REGULAR = VR.VOO_REGULAR_ID
  AND VR.AVIAO = A.NUM_SERIE;
  
  -- Verificar se o lugar existe
  SELECT COUNT(*) INTO LUGAR_EXISTE FROM LUGAR L
  WHERE L.NUM_FILA = :NEW.NUM_FILA_LUGAR
  AND L.LETRA = :NEW.LETRA_LUGAR
  AND L.MARCA_MODELO = MARCA_MODELO_DA_RESERVA
  AND CLASSE = :NEW.CLASSE;
  
  IF  (LUGAR_EXISTE = 0) THEN
    RAISE_APPLICATION_ERROR( -20111, 'O lugar pretendido não existe no tipo de avião.');
  END IF;
  
END;
/

-- R4:	O voo tem de ter o aeroporto destino diferente do aeroporto origem.
ALTER TABLE VOO ADD CONSTRAINT CK_R4_AEROPORTO_ORI_DIF_DEST
CHECK (AEROPORTO_ORIGEM <> AEROPORTO_DESTINO);

-- R5:	A latitude só pode receber S (Sul) ou N (Norte) na orientação.
ALTER TABLE LATITUDE ADD CONSTRAINT CK_R5_ORIENTACAO_LATITUDE
CHECK (ORIENTACAO = 'N' OR ORIENTACAO = 'S');

-- R6:	A longitude só pode receber E (Este) ou O (Oeste) na orientação.
ALTER TABLE LONGITUDE ADD CONSTRAINT CK_R6_ORIENTACAO_LONGITUDE
CHECK (ORIENTACAO = 'E' OR ORIENTACAO = 'O');

-- R7:	A combinação dos atributos das coordenadas da latitude, têm de ser únicos.
ALTER TABLE LATITUDE ADD CONSTRAINT U_R7_LATITUDE
UNIQUE (GRAUS, MINUTOS, SEGUNDOS, ORIENTACAO);

-- R8:	A combinação dos atributos das coordenadas da longitude, têm de ser únicos.
ALTER TABLE LONGITUDE ADD CONSTRAINT U_R7_LONGITUDE
UNIQUE (GRAUS, MINUTOS, SEGUNDOS, ORIENTACAO);

-- R9:	No campo função da tabela tripulante técnico só é admitido os valores ‘PILOTO’ e ‘CO-PILOTO’.
ALTER TABLE TRIPULANTE_TECNICO ADD CONSTRAINT CK_R9_FUNCAO
CHECK (FUNCAO = 'PILOTO' OR FUNCAO = 'CO-PILOTO');

-- R10:	No campo função da tabela tripulante cabine só é admitido os valores ‘COMISSARIO’ e ‘COMISSARIO CHEFE'.
ALTER TABLE TRIPULANTE_CABINE ADD CONSTRAINT CK_R10_FUNCAO
CHECK (FUNCAO = 'COMISSARIO' OR FUNCAO = 'COMISSARIO CHEFE');

-- R11: Para cada voo doméstico e para europa, só pode existir 4 ou 6 tripulantes, respetivamente, 
--      com categoria ‘COMISSARIO’ na tabela tripulante cabine.
CREATE OR REPLACE TRIGGER TG_R11_NUM_COMISSARIOS
BEFORE INSERT OR UPDATE ON TRIPULANTE_CABINE
FOR EACH ROW
DECLARE
  TOTAL_COMISSARIOS_VOO INTEGER;
  NUM_COM_PERMITIDOS INTEGER;
BEGIN
  
  IF (:NEW.FUNCAO = 'COMISSARIO')
  THEN
    SELECT COUNT(*) 
    INTO TOTAL_COMISSARIOS_VOO 
    FROM TRIPULANTE_CABINE
    WHERE VIAGEM_PLANEADA = :NEW.VIAGEM_PLANEADA
      AND FUNCAO = 'COMISSARIO';
    
    SELECT CV.NUM_TRIP_CABINE 
    INTO NUM_COM_PERMITIDOS 
    FROM CATEGORIA_VOO CV, VOO V, VOO_REGULAR VR, VIAGEM_PLANEADA VP
    WHERE VP.VOO_REGULAR = VR.VOO_REGULAR_ID
      AND VR.VOO_ID = V.VOO_ID
      AND V.CAT_VOO_ID = CV.CAT_VOO_ID
      AND VP.VIAGEM_PLANEADA_ID = :NEW.VIAGEM_PLANEADA;
    
    IF (TOTAL_COMISSARIOS_VOO >= (NUM_COM_PERMITIDOS - 1)) 
    THEN
      RAISE_APPLICATION_ERROR( -20101, 'Já foram inseridos todos os comissários permitidos para esta viagem.');
    END IF;
  END IF;
END;
/

-- R12: Para cada voo, só pode existir um ‘COMISSARIO CHEFE’ na tabela tripulante cabine. 
CREATE OR REPLACE TRIGGER TG_R12_UM_COMISSARIO_CHEFE
BEFORE INSERT OR UPDATE ON TRIPULANTE_CABINE
FOR EACH ROW
DECLARE
  HAS_CHEFE INTEGER;
BEGIN
  
  IF (:NEW.FUNCAO = 'COMISSARIO CHEFE')
  THEN
    SELECT COUNT(*) 
    INTO HAS_CHEFE 
    FROM TRIPULANTE_CABINE
    WHERE VIAGEM_PLANEADA = :NEW.VIAGEM_PLANEADA
      AND FUNCAO = 'COMISSARIO CHEFE';
    
    IF (HAS_CHEFE >= 1) 
    THEN
      RAISE_APPLICATION_ERROR( -20101, 'Já foi inserido o comissário chefe para esta viagem.');
    END IF;
  END IF;
END;
/

-- R13: Para cada viagem só pode existir um ‘PILOTO’ e um ‘CO-PILOTO’ na tabela tripulante técnico.
CREATE OR REPLACE TRIGGER TG_R13_1PILOTO_E_1CO_PILOTO
BEFORE INSERT OR UPDATE ON TRIPULANTE_TECNICO
FOR EACH ROW
DECLARE
  HAS_PILOTO INTEGER;
BEGIN
  
  IF (:NEW.FUNCAO = 'CO-PILOTO')
  THEN
    SELECT COUNT(*) 
    INTO HAS_PILOTO 
    FROM TRIPULANTE_TECNICO
    WHERE VIAGEM_PLANEADA = :NEW.VIAGEM_PLANEADA
      AND FUNCAO = 'CO-PILOTO';
    
    IF (HAS_PILOTO >= 1) 
    THEN
      RAISE_APPLICATION_ERROR( -20101, 'Já foi inserido um co-piloto para esta viagem.');
    END IF;
  ELSE
    SELECT COUNT(*) 
    INTO HAS_PILOTO 
    FROM TRIPULANTE_TECNICO
    WHERE VIAGEM_PLANEADA = :NEW.VIAGEM_PLANEADA
      AND FUNCAO = 'PILOTO';
    
    IF (HAS_PILOTO >= 1) 
    THEN
      RAISE_APPLICATION_ERROR( -20101, 'Já foi inserido um piloto para esta viagem.');
    END IF;
  END IF;
END;
/

-- R14:	Um tripulante não pode estar alocado em mais do que 2 viagens no mesmo dia.
-- *** (Trigger resolvido no exercicio 11)

-- R15:	Para pilotar um determinado voo, o piloto tem de ter as horas de voo igual 
--      ou superior às horas necessárias de um certo tipo de avião.
-- *** (Trigger resolvido no exercicio 10)

-- R16: A combinação do tipo de documento com o número do documento no passageiro, tem de ser única.
ALTER TABLE PASSAGEIRO ADD CONSTRAINT U_R16_DOCUMENTO UNIQUE (TIPO_DOCUMENTO, NUM_DOCUMENTO);

-- ### Inserir dados nas tabelas ###

INSERT INTO MARCA VALUES (1, 'Boeing');
INSERT INTO MARCA VALUES (2, 'Airbus');

INSERT INTO MARCA_MODELO VALUES (1, 1, '777');
INSERT INTO MARCA_MODELO VALUES (2, 1, '787');
INSERT INTO MARCA_MODELO VALUES (3, 2, 'A330');

INSERT INTO TIPO_AVIAO VALUES (1, 1000, 1010, 10000, 1000, 10);
INSERT INTO TIPO_AVIAO VALUES (2, 1200, 1020, 100000, 1500, 6);
INSERT INTO TIPO_AVIAO VALUES (3, 900, 1400, 20000, 1200, 4);

INSERT INTO AVIAO VALUES ('F01', 1);
INSERT INTO AVIAO VALUES ('F02', 1);
INSERT INTO AVIAO VALUES ('F03', 2);
INSERT INTO AVIAO VALUES ('F04', 3);
INSERT INTO AVIAO VALUES ('F05', 1);

INSERT INTO CLASSE VALUES (1, 'ECONOMICA');
INSERT INTO CLASSE VALUES (2, 'EXECUTIVA');

INSERT INTO CLASSE_TIPO_AVIAO VALUES (1, 1);
INSERT INTO CLASSE_TIPO_AVIAO VALUES (2, 1);
INSERT INTO CLASSE_TIPO_AVIAO VALUES (3, 1);
INSERT INTO CLASSE_TIPO_AVIAO VALUES (1, 2);
INSERT INTO CLASSE_TIPO_AVIAO VALUES (2, 2);

INSERT INTO LUGAR VALUES (1, 'A', 1, 1);
INSERT INTO LUGAR VALUES (2, 'A', 1, 1);
INSERT INTO LUGAR VALUES (3, 'A', 1, 1);
INSERT INTO LUGAR VALUES (4, 'A', 1, 2);
INSERT INTO LUGAR VALUES (5, 'A', 1, 2);
INSERT INTO LUGAR VALUES (1, 'B', 1, 1);
INSERT INTO LUGAR VALUES (2, 'B', 1, 1);
INSERT INTO LUGAR VALUES (3, 'B', 1, 1);
INSERT INTO LUGAR VALUES (4, 'B', 1, 2);
INSERT INTO LUGAR VALUES (5, 'B', 1, 2);
INSERT INTO LUGAR VALUES (1, 'A', 2, 2);
INSERT INTO LUGAR VALUES (2, 'A', 2, 1);
INSERT INTO LUGAR VALUES (3, 'A', 2, 1);
INSERT INTO LUGAR VALUES (1, 'B', 2, 2);
INSERT INTO LUGAR VALUES (2, 'B', 2, 1);
INSERT INTO LUGAR VALUES (3, 'B', 2, 1);
INSERT INTO LUGAR VALUES (1, 'A', 3, 1);
INSERT INTO LUGAR VALUES (2, 'A', 3, 1);
INSERT INTO LUGAR VALUES (1, 'B', 3, 1);
INSERT INTO LUGAR VALUES (2, 'B', 3, 1);

INSERT INTO CATEGORIA_TRIP VALUES (1, 'PILOTO', 5000.0);
INSERT INTO CATEGORIA_TRIP VALUES (2, 'COMISSARIO', 3000.0);

INSERT INTO TRIPULANTE VALUES (1, 'TIAGO', 2);
INSERT INTO TRIPULANTE VALUES (2, 'RENATO', 2);
INSERT INTO TRIPULANTE VALUES (3, 'ERIC', 2);
INSERT INTO TRIPULANTE VALUES (4, 'FLAVIO', 2);
INSERT INTO TRIPULANTE VALUES (5, 'ANA', 2);
INSERT INTO TRIPULANTE VALUES (6, 'ISABEL', 2);
INSERT INTO TRIPULANTE VALUES (7, 'ELSA', 2);
INSERT INTO TRIPULANTE VALUES (8, 'RUI', 2);
INSERT INTO TRIPULANTE VALUES (9, 'JOANA', 2);
INSERT INTO TRIPULANTE VALUES (10, 'ANDRE', 2);
INSERT INTO TRIPULANTE VALUES (11, 'JOSE', 2);
INSERT INTO TRIPULANTE VALUES (12, 'LARA', 2);
INSERT INTO TRIPULANTE VALUES (13, 'IVO', 1);
INSERT INTO TRIPULANTE VALUES (14, 'DANIEL', 1);
INSERT INTO TRIPULANTE VALUES (15, 'BERNARDO', 1);
INSERT INTO TRIPULANTE VALUES (16, 'DINIS', 1);

INSERT INTO HORAS_VOO VALUES (13, 1, 1);
INSERT INTO HORAS_VOO VALUES (13, 2, 10000);
INSERT INTO HORAS_VOO VALUES (14, 3, 2);
INSERT INTO HORAS_VOO VALUES (14, 1, 5000);
INSERT INTO HORAS_VOO VALUES (14, 2, 1);
INSERT INTO HORAS_VOO VALUES (13, 3, 7000);

INSERT INTO HORAS_VOO VALUES (15, 1, 130);
INSERT INTO HORAS_VOO VALUES (15, 2, 1000);
INSERT INTO HORAS_VOO VALUES (15, 3, 2);
INSERT INTO HORAS_VOO VALUES (16, 1, 8000);
INSERT INTO HORAS_VOO VALUES (16, 2, 120);
INSERT INTO HORAS_VOO VALUES (16, 3, 3500);

INSERT INTO LATITUDE VALUES (1, 70, 30, 20, 'S');
INSERT INTO LATITUDE VALUES (2, 180, 20, 10, 'N');
INSERT INTO LATITUDE VALUES (3, 340, 15, 20, 'N');
INSERT INTO LATITUDE VALUES (4, 230, 34, 56, 'S');
INSERT INTO LATITUDE VALUES (5, 120, 12, 45, 'S');
INSERT INTO LATITUDE VALUES (6, 65, 20, 34, 'N');

INSERT INTO LONGITUDE VALUES (1, 70, 30, 20, 'E');
INSERT INTO LONGITUDE VALUES (2, 180, 20, 10, 'O');
INSERT INTO LONGITUDE VALUES (3, 340, 15, 20, 'E');
INSERT INTO LONGITUDE VALUES (4, 230, 34, 56, 'E');
INSERT INTO LONGITUDE VALUES (5, 120, 12, 45, 'E');
INSERT INTO LONGITUDE VALUES (6, 65, 20, 34, 'O');


INSERT INTO PAIS VALUES (1, 'PORTUGAL');
INSERT INTO PAIS VALUES (2, 'ESPANHA');
INSERT INTO PAIS VALUES (3, 'ALEMANHA');
INSERT INTO PAIS VALUES (4, 'POLONIA');

INSERT INTO CIDADE VALUES (1, 1, 'PORTO');
INSERT INTO CIDADE VALUES (2, 1, 'LISBOA');
INSERT INTO CIDADE VALUES (3, 1, 'FARO');
INSERT INTO CIDADE VALUES (4, 2, 'MADRID');
INSERT INTO CIDADE VALUES (5, 3, 'FRANKFURT');
INSERT INTO CIDADE VALUES (6, 4, 'VARSOVIA');
INSERT INTO CIDADE VALUES (7, 4, 'LODZ');

INSERT INTO AEROPORTO VALUES ('OPO', 'AEROPORTO PORTO', 1, 1, 1);
INSERT INTO AEROPORTO VALUES ('LIS', 'AEROPORTO LISBOA', 2, 2, 2);
INSERT INTO AEROPORTO VALUES ('FAR', 'AEROPORTO FARO', 3, 3, 3);
INSERT INTO AEROPORTO VALUES ('MAD', 'AEROPORTO MADRID', 4, 4, 4);
INSERT INTO AEROPORTO VALUES ('FRA', 'AEROPORTO FRANKFURT', 5, 5, 5);
INSERT INTO AEROPORTO VALUES ('VAR', 'AEROPORTO VARSOVIA', 6, 6, 6);

INSERT INTO ROTA VALUES (1, 'ROTA OPO-MAD');
INSERT INTO ROTA VALUES (2, 'ROTA OPO-VAR');
INSERT INTO ROTA VALUES (3, 'ROTA OPO-VAR (C/ ESCALA)');
INSERT INTO ROTA VALUES (4, 'ROTA OPO-MAD (C/ ESCALA)');
INSERT INTO ROTA VALUES (5, 'ROTA OPO-LIS');
INSERT INTO ROTA VALUES (6, 'ROTA OPO-FAR (C/ ESCALA)');

INSERT INTO CATEGORIA_VOO VALUES (1, 'DOMESTICO', 4);
INSERT INTO CATEGORIA_VOO VALUES (2, 'EUROPA', 6);

INSERT INTO VOO VALUES (1, 300, 60, 'OPO', 'LIS', 1);
INSERT INTO VOO VALUES (2, 500, 90, 'OPO', 'MAD', 2);
INSERT INTO VOO VALUES (3, 1000, 210, 'OPO', 'VAR', 2);
INSERT INTO VOO VALUES (4, 300, 60, 'OPO', 'LIS', 1);
INSERT INTO VOO VALUES (5, 600, 120, 'OPO', 'FRA', 2);
INSERT INTO VOO VALUES (6, 300, 90, 'FRA', 'VAR', 2);
INSERT INTO VOO VALUES (7, 450, 90, 'LIS', 'MAD', 2);
INSERT INTO VOO VALUES (8, 300, 60, 'LIS', 'FAR', 1);
INSERT INTO VOO VALUES (9, 1000, 120, 'VAR', 'LIS', 2); -- NEW
INSERT INTO VOO VALUES (10, 800, 120, 'VAR', 'OPO', 2); -- NEW (para testar procedure 15)

INSERT INTO VOO_ROTA VALUES (1, 2);
INSERT INTO VOO_ROTA VALUES (2, 3);
INSERT INTO VOO_ROTA VALUES (3, 5);
INSERT INTO VOO_ROTA VALUES (3, 6);
INSERT INTO VOO_ROTA VALUES (4, 1);
INSERT INTO VOO_ROTA VALUES (4, 7);
INSERT INTO VOO_ROTA VALUES (5, 1);
INSERT INTO VOO_ROTA VALUES (6, 1);
INSERT INTO VOO_ROTA VALUES (6, 8);

INSERT INTO PLANO VALUES (1, 'PLANO DEZEMBRO', TO_DATE('01-DEZ-16','DD-MON-YY'), TO_DATE('31-DEZ-16','DD-MON-YY'));
INSERT INTO PLANO VALUES (2, 'PLANO PRIMAVERA', TO_DATE('21-MAR-17','DD-MON-YY'), TO_DATE('20-JUN-17','DD-MON-YY'));

INSERT INTO VOO_REGULAR VALUES (1, 1, 1, 'F04', 1, '09:00');
INSERT INTO VOO_REGULAR VALUES (2, 1, 8, 'F02', 1, '12:00');
INSERT INTO VOO_REGULAR VALUES (3, 1, 2, 'F03', 4, '10:30');
INSERT INTO VOO_REGULAR VALUES (4, 2, 3, 'F01', 3, '09:00');
INSERT INTO VOO_REGULAR VALUES (5, 2, 5, 'F02', 6, '08:00');
INSERT INTO VOO_REGULAR VALUES (6, 2, 6, 'F03', 6, '15:00');
INSERT INTO VOO_REGULAR VALUES (7, 1, 1, 'F04', 2, '09:00');
INSERT INTO VOO_REGULAR VALUES (8, 1, 1, 'F04', 3, '09:00');
INSERT INTO VOO_REGULAR VALUES (9, 1, 1, 'F04', 4, '09:00');
INSERT INTO VOO_REGULAR VALUES (10, 1, 1, 'F04', 5, '09:00');
INSERT INTO VOO_REGULAR VALUES (11, 1, 1, 'F04', 6, '09:00');
INSERT INTO VOO_REGULAR VALUES (12, 1, 1, 'F04', 7, '09:00');
INSERT INTO VOO_REGULAR VALUES (13, 1, 1, 'F04', 2, '19:00');
INSERT INTO VOO_REGULAR VALUES (14, 1, 8, 'F04', 3, '20:00'); --NEW
INSERT INTO VOO_REGULAR VALUES (15, 1, 9, 'F04', 3, '18:30'); --NEW
INSERT INTO VOO_REGULAR VALUES (16, 2, 10, 'F01', 3, '21:30'); -- NEW (para testar procedure 15)

INSERT INTO VIAGEM_PLANEADA VALUES (1, 1, TO_DATE('2016/12/04 09:00','YYYY/MM/DD HH24:MI'), TO_DATE('2016/12/04 10:00','YYYY/MM/DD HH24:MI'));
INSERT INTO VIAGEM_PLANEADA VALUES (2, 2, TO_DATE('2016/12/04 12:00','YYYY/MM/DD HH24:MI'), TO_DATE('2016/12/04 13:00','YYYY/MM/DD HH24:MI'));
INSERT INTO VIAGEM_PLANEADA VALUES (3, 4, TO_DATE('2016/12/06 09:00','YYYY/MM/DD HH24:MI'), TO_DATE('2016/12/06 12:30','YYYY/MM/DD HH24:MI'));
INSERT INTO VIAGEM_PLANEADA VALUES (4, 4, TO_DATE('2016/12/13 11:00','YYYY/MM/DD HH24:MI'), TO_DATE('2016/12/13 12:30','YYYY/MM/DD HH24:MI'));
INSERT INTO VIAGEM_PLANEADA VALUES (5, 1, TO_DATE('2017/5/13 9:00','YYYY/MM/DD HH24:MI'), TO_DATE('2017/5/13 11:30','YYYY/MM/DD HH24:MI'));
INSERT INTO VIAGEM_PLANEADA VALUES (6, 1, TO_DATE('2017/7/19 12:00','YYYY/MM/DD HH24:MI'), TO_DATE('2017/7/19 14:30','YYYY/MM/DD HH24:MI'));
INSERT INTO VIAGEM_PLANEADA VALUES (7, 2, TO_DATE('2017/9/23 11:00','YYYY/MM/DD HH24:MI'), TO_DATE('2017/9/23 12:30','YYYY/MM/DD HH24:MI'));
INSERT INTO VIAGEM_PLANEADA VALUES (8, 14, TO_DATE('2016/12/13 20:00','YYYY/MM/DD HH24:MI'), TO_DATE('2016/12/13 21:00','YYYY/MM/DD HH24:MI')); -- NEW
INSERT INTO VIAGEM_PLANEADA VALUES (9, 15, TO_DATE('2016/12/13 18:30','YYYY/MM/DD HH24:MI'), TO_DATE('2016/12/13 20:30','YYYY/MM/DD HH24:MI')); -- NEW

INSERT INTO PRECO VALUES (1, 1, 300.00);
INSERT INTO PRECO VALUES (2, 1, 350.00);
INSERT INTO PRECO VALUES (2, 2, 500.00);
INSERT INTO PRECO VALUES (3, 1, 400.00);
INSERT INTO PRECO VALUES (3, 2, 650.00);
INSERT INTO PRECO VALUES (4, 1, 300.00);
INSERT INTO PRECO VALUES (4, 2, 350.00);
INSERT INTO PRECO VALUES (5, 1, 500.00);
INSERT INTO PRECO VALUES (5, 2, 400.00);
INSERT INTO PRECO VALUES (6, 1, 750.00);
INSERT INTO PRECO VALUES (6, 2, 850.00);
INSERT INTO PRECO VALUES (7, 1, 300.00);
INSERT INTO PRECO VALUES (8, 1, 280.00);
INSERT INTO PRECO VALUES (9, 1, 250.00);
INSERT INTO PRECO VALUES (10, 1, 320.00);
INSERT INTO PRECO VALUES (11, 1, 260.00);
INSERT INTO PRECO VALUES (12, 1, 275.00);
INSERT INTO PRECO VALUES (13, 1, 250.00);

INSERT INTO VIAGEM_REALIZADA VALUES (1, TO_DATE('2016/12/04 09:10','YYYY/MM/DD HH24:MI'), TO_DATE('2016/12/04 10:20','YYYY/MM/DD HH24:MI'));
INSERT INTO VIAGEM_REALIZADA VALUES (2, TO_DATE('2016/12/04 12:05','YYYY/MM/DD HH24:MI'), TO_DATE('2016/12/04 13:10','YYYY/MM/DD HH24:MI'));
INSERT INTO VIAGEM_REALIZADA VALUES (3, TO_DATE('2016/12/06 09:10','YYYY/MM/DD HH24:MI'), TO_DATE('2016/12/06 14:40','YYYY/MM/DD HH24:MI'));
INSERT INTO VIAGEM_REALIZADA VALUES (4, TO_DATE('2016/12/13 11:20','YYYY/MM/DD HH24:MI'), TO_DATE('2016/12/13 12:55','YYYY/MM/DD HH24:MI'));

INSERT INTO TRIPULANTE_CABINE VALUES (1, 1, 'COMISSARIO');
INSERT INTO TRIPULANTE_CABINE VALUES (1, 6, 'COMISSARIO');
INSERT INTO TRIPULANTE_CABINE VALUES (1, 2, 'COMISSARIO');
INSERT INTO TRIPULANTE_CABINE VALUES (1, 4, 'COMISSARIO CHEFE');
INSERT INTO TRIPULANTE_CABINE VALUES (2, 2, 'COMISSARIO CHEFE');
INSERT INTO TRIPULANTE_CABINE VALUES (2, 3, 'COMISSARIO');
INSERT INTO TRIPULANTE_CABINE VALUES (2, 5, 'COMISSARIO');
INSERT INTO TRIPULANTE_CABINE VALUES (2, 7, 'COMISSARIO');
INSERT INTO TRIPULANTE_CABINE VALUES (3, 7, 'COMISSARIO');
INSERT INTO TRIPULANTE_CABINE VALUES (3, 8, 'COMISSARIO');
INSERT INTO TRIPULANTE_CABINE VALUES (3, 9, 'COMISSARIO CHEFE');
INSERT INTO TRIPULANTE_CABINE VALUES (3, 10, 'COMISSARIO');
INSERT INTO TRIPULANTE_CABINE VALUES (3, 11, 'COMISSARIO');
INSERT INTO TRIPULANTE_CABINE VALUES (3, 12, 'COMISSARIO');

INSERT INTO TRIPULANTE_TECNICO VALUES (1, 13, 'PILOTO');
INSERT INTO TRIPULANTE_TECNICO VALUES (1, 14, 'CO-PILOTO');
INSERT INTO TRIPULANTE_TECNICO VALUES (2, 16, 'PILOTO');
INSERT INTO TRIPULANTE_TECNICO VALUES (2, 15, 'CO-PILOTO');
INSERT INTO TRIPULANTE_TECNICO VALUES (3, 13, 'PILOTO');
INSERT INTO TRIPULANTE_TECNICO VALUES (3, 14, 'CO-PILOTO');
INSERT INTO TRIPULANTE_TECNICO VALUES (4, 14, 'PILOTO');
INSERT INTO TRIPULANTE_TECNICO VALUES (4, 13, 'CO-PILOTO');

INSERT INTO PASSAGEIRO VALUES (1, 'FABIO', 'MORIM', 'PASSAPORTE', 1502345);
INSERT INTO PASSAGEIRO VALUES (2, 'PEDRO', 'SILVA', 'PASSAPORTE', 1402246);
INSERT INTO PASSAGEIRO VALUES (3, 'RUBEN', 'DIAS', 'CARTAO CIDADAO', 95002334);
INSERT INTO PASSAGEIRO VALUES (4, 'ANA', 'DIAS', 'CARTAO CIDADAO', 96012674);

INSERT INTO RESERVA VALUES (1, 1, 1, 1, 1, 'A');
INSERT INTO RESERVA VALUES (2, 2, 1, 1, 1, 'B');
INSERT INTO RESERVA VALUES (3, 3, 2, 1, 2, 'A');
INSERT INTO RESERVA VALUES (4, 4, 2, 2, 5, 'A');

INSERT INTO BONUS VALUES (1, 1, 300.0);
INSERT INTO BONUS VALUES (1, 2, 100.0);
INSERT INTO BONUS VALUES (2, 1, 400.0);
INSERT INTO BONUS VALUES (2, 2, 200.0);