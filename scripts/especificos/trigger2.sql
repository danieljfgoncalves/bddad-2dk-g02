-- 11.
-- Trigger que impeça que um tripulante possa ser alocado a um voo se o número
-- de voos com inicio no mesmo dia for superior a 2 ou, no caso da 2ª viagem do
-- dia, o aeroporto de partida for diferente do da chegada da 1ª viagem.

-- Trigger 11 para os tripulantes técnicos
CREATE OR REPLACE TRIGGER TG_ALOCACAO_TRIPULANTE_TECNICO
BEFORE INSERT OR UPDATE ON TRIPULANTE_TECNICO
FOR EACH ROW
DECLARE
  NUMERO_VIAGENS_ALOCADAS NUMBER;
  DATA_DA_ALOCACAO DATE;
  AERO_DEST_VIAGEM_1 VOO.AEROPORTO_DESTINO%TYPE;
  AERO_ORIGEM_VIAGEM_2  VOO.AEROPORTO_ORIGEM%TYPE;
BEGIN
  -- Obter a data para a qual o tripulante foi alocado
  SELECT DATA_PLANEADA_PARTIDA INTO DATA_DA_ALOCACAO
  FROM VIAGEM_PLANEADA
  WHERE VIAGEM_PLANEADA_ID = :NEW.VIAGEM_PLANEADA;

  -- ver em quantas viagens já foi alocado
  SELECT COUNT(*) INTO NUMERO_VIAGENS_ALOCADAS
  FROM VIAGEM_PLANEADA VP, TRIPULANTE_TECNICO TT
  WHERE TT.VIAGEM_PLANEADA = VP.VIAGEM_PLANEADA_ID
  AND TT.TRIPULANTE = :NEW.TRIPULANTE
  AND TRUNC(VP.DATA_PLANEADA_PARTIDA) = TRUNC(DATA_DA_ALOCACAO);
  
  IF (NUMERO_VIAGENS_ALOCADAS = 1) THEN
    -- Obter aeroporto destino da primeira viagem
    SELECT V.AEROPORTO_DESTINO INTO AERO_DEST_VIAGEM_1
    FROM TRIPULANTE_TECNICO TT, VIAGEM_PLANEADA VP, VOO_REGULAR VR, VOO V
    WHERE TT.VIAGEM_PLANEADA = VP.VIAGEM_PLANEADA_ID
    AND TT.TRIPULANTE = :NEW.TRIPULANTE
    AND VP.VOO_REGULAR = VR.VOO_REGULAR_ID
    AND VR.VOO_ID = V.VOO_ID
    AND TRUNC(VP.DATA_PLANEADA_PARTIDA) = TRUNC(DATA_DA_ALOCACAO);

    -- Obter aeroporto origem da segunda viagem
    SELECT AEROPORTO_ORIGEM INTO AERO_ORIGEM_VIAGEM_2
    FROM VIAGEM_PLANEADA VP, VOO_REGULAR VR, VOO V
    WHERE VP.VIAGEM_PLANEADA_ID = :NEW.VIAGEM_PLANEADA
    AND VP.VOO_REGULAR = VR.VOO_REGULAR_ID
    AND VR.VOO_ID = V.VOO_ID;

    IF (AERO_ORIGEM_VIAGEM_2 <> AERO_DEST_VIAGEM_1) THEN
      RAISE_APPLICATION_ERROR( -20001, 'O aeroporto origem da segunda viagem tem de ser o aeroporto destino da primeira viagem.');
    END IF;
    
  ELSIF (NUMERO_VIAGENS_ALOCADAS > 1) THEN
    RAISE_APPLICATION_ERROR( -20002, 'Não pode ser alocado a mais de 2 voos num único dia.');
  END IF;
  
END;
/

-- Trigger 11 para os tripulantes cabine
CREATE OR REPLACE TRIGGER TG_ALOCACAO_TRIPULANTE_CABINE
BEFORE INSERT OR UPDATE ON TRIPULANTE_CABINE
FOR EACH ROW
DECLARE
  NUMERO_VIAGENS_ALOCADAS NUMBER;
  DATA_DA_ALOCACAO DATE;
  AERO_DEST_VIAGEM_1 VOO.AEROPORTO_DESTINO%TYPE;
  AERO_ORIGEM_VIAGEM_2  VOO.AEROPORTO_ORIGEM%TYPE;
BEGIN
  -- Obter a data para a qual o tripulante foi alocado
  SELECT DATA_PLANEADA_PARTIDA INTO DATA_DA_ALOCACAO
  FROM VIAGEM_PLANEADA
  WHERE VIAGEM_PLANEADA_ID = :NEW.VIAGEM_PLANEADA;

  -- ver em quantas viagens já foi alocado
  SELECT COUNT(*) INTO NUMERO_VIAGENS_ALOCADAS
  FROM VIAGEM_PLANEADA VP, TRIPULANTE_CABINE TC
  WHERE TC.VIAGEM_PLANEADA = VP.VIAGEM_PLANEADA_ID
  AND TC.TRIPULANTE = :NEW.TRIPULANTE
  AND TRUNC(VP.DATA_PLANEADA_PARTIDA) = TRUNC(DATA_DA_ALOCACAO);
  
  IF (NUMERO_VIAGENS_ALOCADAS = 1) THEN
    -- Obter aeroporto destino da primeira viagem
    SELECT V.AEROPORTO_DESTINO INTO AERO_DEST_VIAGEM_1
    FROM TRIPULANTE_CABINE TC, VIAGEM_PLANEADA VP, VOO_REGULAR VR, VOO V
    WHERE TC.VIAGEM_PLANEADA = VP.VIAGEM_PLANEADA_ID
    AND TC.TRIPULANTE = :NEW.TRIPULANTE
    AND VP.VOO_REGULAR = VR.VOO_REGULAR_ID
    AND VR.VOO_ID = V.VOO_ID
    AND TRUNC(VP.DATA_PLANEADA_PARTIDA) = TRUNC(DATA_DA_ALOCACAO);

    -- Obter aeroporto origem da segunda viagem
    SELECT AEROPORTO_ORIGEM INTO AERO_ORIGEM_VIAGEM_2
    FROM VIAGEM_PLANEADA VP, VOO_REGULAR VR, VOO V
    WHERE VP.VIAGEM_PLANEADA_ID = :NEW.VIAGEM_PLANEADA
    AND VP.VOO_REGULAR = VR.VOO_REGULAR_ID
    AND VR.VOO_ID = V.VOO_ID;

    IF (AERO_ORIGEM_VIAGEM_2 <> AERO_DEST_VIAGEM_1) THEN
      RAISE_APPLICATION_ERROR( -20001, 'O aeroporto origem da segunda viagem tem de ser o aeroporto destino da primeira viagem.');
    END IF;
    
  ELSIF (NUMERO_VIAGENS_ALOCADAS > 1) THEN
    RAISE_APPLICATION_ERROR( -20002, 'Não pode ser alocado a mais de 2 voos num único dia.');
  END IF;
  
END;
/

-- ### TESTAR O TRIGGER 11 PARA TRIPULANTES TÉCNICOS ###

INSERT INTO VOO VALUES (9, 1000, 120, 'VAR', 'LIS', 2); -- NEW
INSERT INTO VOO_REGULAR VALUES (14, 1, 8, 'F04', 3, '20:00'); --NEW
INSERT INTO VOO_REGULAR VALUES (15, 1, 9, 'F04', 3, '18:30'); --NEW
INSERT INTO VIAGEM_PLANEADA VALUES (8, 14, TO_DATE('2016/12/13 20:00','YYYY/MM/DD HH24:MI'), TO_DATE('2016/12/13 21:00','YYYY/MM/DD HH24:MI')); -- NEW
INSERT INTO VIAGEM_PLANEADA VALUES (9, 15, TO_DATE('2016/12/13 18:30','YYYY/MM/DD HH24:MI'), TO_DATE('2016/12/13 20:30','YYYY/MM/DD HH24:MI')); -- NEW

SELECT *
FROM VIAGEM_PLANEADA VP, TRIPULANTE_TECNICO TP, TRIPULANTE T, VOO_REGULAR VR, VOO V
WHERE TP.VIAGEM_PLANEADA = VP.VIAGEM_PLANEADA_ID AND TP.TRIPULANTE = T.TRIPULANTE_ID
AND VP.VOO_REGULAR = VR.VOO_REGULAR_ID AND VR.VOO_ID = V.VOO_ID
AND T.TRIPULANTE_ID = 13 AND TRUNC(VP.DATA_PLANEADA_PARTIDA) = TO_DATE('2016/12/13', 'YYYY/MM/DD');

INSERT INTO TRIPULANTE_TECNICO VALUES (8, 13, 'PILOTO');
INSERT INTO TRIPULANTE_TECNICO VALUES (9, 13, 'PILOTO');

DELETE FROM TRIPULANTE_TECNICO
WHERE VIAGEM_PLANEADA BETWEEN 8 AND 9
AND TRIPULANTE = 13;

-- ### FIM DO TESTE AO TRIGGER ###


-- Obter numero de viagens alocadas dum piloto num certo dia
SELECT COUNT(*)
FROM VIAGEM_PLANEADA VP, TRIPULANTE_TECNICO TP, TRIPULANTE T
WHERE TP.VIAGEM_PLANEADA = VP.VIAGEM_PLANEADA_ID AND TP.TRIPULANTE = T.TRIPULANTE_ID
  AND T.TRIPULANTE_ID = 13 AND TRUNC(VP.DATA_PLANEADA_PARTIDA) = TO_DATE('2016/12/13', 'YYYY/MM/DD');

-- Obter data para o qual o tripulante foi alocado
SELECT TRUNC(DATA_PLANEADA_PARTIDA) FROM VIAGEM_PLANEADA, TRIPULANTE_TECNICO
WHERE VIAGEM_PLANEADA_ID = VIAGEM_PLANEADA
  AND VIAGEM_PLANEADA_ID = 3 AND TRIPULANTE = 13;

-- Admitindo que o piloto tem 1 viagem alocada num dia, verificar aeroporto destino
SELECT V.AEROPORTO_DESTINO
FROM VIAGEM_PLANEADA VP, TRIPULANTE_TECNICO TP, TRIPULANTE T, VOO_REGULAR VR, VOO V
WHERE TP.VIAGEM_PLANEADA = VP.VIAGEM_PLANEADA_ID AND TP.TRIPULANTE = T.TRIPULANTE_ID
  AND VP.VOO_REGULAR = VR.VOO_REGULAR_ID AND VR.VOO_ID = V.VOO_ID
  AND T.TRIPULANTE_ID = 13 AND TRUNC(VP.DATA_PLANEADA_PARTIDA) = TO_DATE('2016/12/13', 'YYYY/MM/DD');
  
-- Obter aeroporto destino para o qual o tripulante foi alocado
SELECT AEROPORTO_ORIGEM
FROM VIAGEM_PLANEADA VP, TRIPULANTE_TECNICO TT, VOO_REGULAR VR, VOO V
WHERE VP.VIAGEM_PLANEADA_ID = TT.VIAGEM_PLANEADA
  AND VP.VOO_REGULAR = VR.VOO_REGULAR_ID AND VR.VOO_ID = V.VOO_ID
  AND VP.VIAGEM_PLANEADA_ID = 3 AND TT.TRIPULANTE = 13;