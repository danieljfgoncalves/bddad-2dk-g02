-- 5.
-- Função que devolva o salário total de um piloto num dado mês.

CREATE OR REPLACE FUNCTION FC_SALARIO_TOTAL
  (PILOTO_ID IN NUMBER, MES IN NUMBER)
RETURN FLOAT IS
  SALARIO_TOTAL FLOAT;
  BONUS_CAT FLOAT;
  CURSOR VOOS_POR_CAT IS
    (
      -- Obter os voos realizador por cada categoria
      SELECT V.CAT_VOO_ID, COUNT(*) VOOS_REALIZADOS_POR_CATEGORIA
      FROM VIAGEM_REALIZADA VR, VOO V, VOO_REGULAR VoR
      WHERE VR.VIAGEM_REALIZADA_ID IN (SELECT VIAGEM_REALIZADA FROM TRIPULANTE_TECNICO WHERE TRIPULANTE = PILOTO_ID)
        AND TO_CHAR(VR.DATA_REALIZADA_PARTIDA, 'MM') = MES
        AND V.VOO_ID = VoR.VOO_ID
        AND VoR.VOO_REGULAR_ID = VR.VIAGEM_REALIZADA_ID
      GROUP BY V.CAT_VOO_ID
    );
BEGIN
  -- Obter o salário base do piloto
  SELECT CT.SALARIO_MENSAL INTO SALARIO_TOTAL FROM CATEGORIA_TRIP CT WHERE CT.NOME = 'PILOTO';
  
  FOR VOO_POR_CAT IN VOOS_POR_CAT
  LOOP
    -- Obter o bonus para a categoria atual
    SELECT B.BONUS INTO BONUS_CAT FROM BONUS B
    WHERE B.CAT_VOO_ID = VOO_POR_CAT.CAT_VOO_ID
    AND CATEGORIA_TRIP_ID = (SELECT CT.CATEGORIA_TRIP_ID FROM CATEGORIA_TRIP CT WHERE CT.NOME = 'PILOTO');
    
    -- Somar as ocurrências do bonus ao total
    SALARIO_TOTAL := SALARIO_TOTAL + BONUS_CAT * VOO_POR_CAT.VOOS_REALIZADOS_POR_CATEGORIA; 
  END LOOP;
  
  RETURN SALARIO_TOTAL;
END FC_SALARIO_TOTAL;
/

SELECT FC_SALARIO_TOTAL(13, 12) FROM DUAL;

-- INSERT MORE DATA TO TEST
INSERT INTO TRIPULANTE_TECNICO VALUES (4, 14, 'PILOTO');
INSERT INTO TRIPULANTE_TECNICO VALUES (4, 13, 'CO-PILOTO');

-- OBTER PILOTOS
SELECT * FROM TRIPULANTE WHERE CATEGORIA = (SELECT CATEGORIA_TRIP_ID FROM CATEGORIA_TRIP WHERE NOME = 'PILOTO');

-- OBTER VIAGENS REALIZADAS POR UM PILOTO NUM MÊS
-- 13 = PILOTO, 12 = MÊS (NA FUNCTION VAI SER RECEBIDO POR PARÂMETRO)
SELECT *
FROM VIAGEM_REALIZADA VR
WHERE VR.VIAGEM_REALIZADA_ID IN (SELECT VIAGEM_REALIZADA FROM TRIPULANTE_TECNICO WHERE TRIPULANTE = 13)
  AND TO_CHAR(VR.DATA_REALIZADA_PARTIDA, 'MM') = 12;

-- OBTER CATEGORIA DE VOO DE UMA VIAGEM REALIZADA
SELECT DISTINCT V.CAT_VOO_ID
FROM VOO V, VOO_REGULAR VoR, VIAGEM_PLANEADA VP, VIAGEM_REALIZADA ViR
WHERE VoR.VOO_ID = V.VOO_ID
  AND VoR.VOO_REGULAR_ID = 3;

-- OBTER CAT_VOO_ID DE VIAGENS REALIZADAS POR UM PILOTO NUM MÊS
-- 13 = PILOTO, 12 = MÊS (NA FUNCTION VAI SER RECEBIDO POR PARÂMETRO)
SELECT VR.*, V.CAT_VOO_ID
FROM VIAGEM_REALIZADA VR, VOO V, VOO_REGULAR VoR
WHERE VR.VIAGEM_REALIZADA_ID IN (SELECT VIAGEM_REALIZADA FROM TRIPULANTE_TECNICO WHERE TRIPULANTE = 13)
  AND TO_CHAR(VR.DATA_REALIZADA_PARTIDA, 'MM') = 12
  AND V.VOO_ID = VoR.VOO_ID
  AND VoR.VOO_REGULAR_ID = VR.VIAGEM_REALIZADA_ID;

-- OBTER OS VOOS REALIZADOS POR CATEGORIA
-- 13 = PILOTO, 12 = MÊS (NA FUNCTION VAI SER RECEBIDO POR PARÂMETRO)
SELECT V.CAT_VOO_ID, COUNT(*) VOOS_REALIZADOS_POR_CATEGORIA
FROM VIAGEM_REALIZADA VR, VOO V, VOO_REGULAR VoR
WHERE VR.VIAGEM_REALIZADA_ID IN (SELECT VIAGEM_REALIZADA FROM TRIPULANTE_TECNICO WHERE TRIPULANTE = 13)
  AND TO_CHAR(VR.DATA_REALIZADA_PARTIDA, 'MM') = 12
  AND V.VOO_ID = VoR.VOO_ID
  AND VoR.VOO_REGULAR_ID = VR.VIAGEM_REALIZADA_ID
GROUP BY V.CAT_VOO_ID;

-- OBTER BONUS
SELECT B.BONUS
FROM BONUS B
WHERE B.CAT_VOO_ID = 1 AND CATEGORIA_TRIP_ID = (SELECT CT.CATEGORIA_TRIP_ID FROM CATEGORIA_TRIP CT WHERE CT.NOME = 'PILOTO');

SELECT * FROM BONUS;